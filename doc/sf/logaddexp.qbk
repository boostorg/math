[/
  Copyright Matt Borland 2022
  Distributed under the Boost Software License, Version 1.0.
  (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt).
]

[section:logaddexp logaddexp and logsumexp]

[h4 Synopsis]

    #include <boost/math/special_functions/logaddexp.hpp>

    namespace boost { namespace math {

    template <typename Real>
    Real logaddexp (Real x1, Real x2);

    }} // namespaces

    #include <boost/math/special_functions/logsumexp.hpp>

    namespace boost { namespace math {

    template <typename ForwardIterator, typename Real = std::iterator_traits<ForwardIterator>::value_type>
    Real logsumexp (ForwardIterator first, ForwardIterator last);

    template <typename ForwardContainer, typename Real = ForwardContainer::value_type>
    Real logsumexp (const ForwardContainer& c);

    template <typename... Args, typename Real = typename std::common_type<Args...>::type>
    Real logsumexp(Args&& ...args)

    }} // namespace


The function `logaddexp(x1, x2)` computes log(exp(x1) + exp(x2)).
The function `logsumexp(x1, x2, ...)` is generalized to compute log(exp(x1) + exp(x2) + ...).
This function is useful in statistics where the calculated probabilities of events may be so small as to exceed the range of normal floating point numbers. 
In such cases the logarithm of the calculated probability is stored.


The use is

    using std::log;
    
    double x1 = log(1e-50);
    double x2 = log(2.5e-50);
    double x3 = log(3e-50);
    std::vector<double> x = {x1, x2, x3};

    double probability1 = boost::math::logaddexp(x1, x2);
    double probability2 = boost::math::logsumexp(x1, x2, x3);
    double probability3 = boost::math::logsumexp(x);
    double probability4 = boost::math::logsumexp(x.begin(), x.end());

Performance Data:

```
Run on (8 X 1992 MHz CPU s)
CPU Caches:
  L1 Data 32K (x4)
  L1 Instruction 32K (x4)
  L2 Unified 262K (x4)
  L3 Unified 8388K (x1)
-----------------------------------------------------------------------------
Benchmark                                   Time             CPU   Iterations
-----------------------------------------------------------------------------
logaddexp_performance<float>             1.58 ns         1.57 ns    448000000
logaddexp_performance<double>            1.51 ns         1.51 ns    497777778
logaddexp_performance<long double>       1.56 ns         1.57 ns    497777778
```

```
Run on (8 X 1992 MHz CPU s)
CPU Caches:
  L1 Data 32K (x4)
  L1 Instruction 32K (x4)
  L2 Unified 262K (x4)
  L3 Unified 8388K (x1)
-----------------------------------------------------------------------------------------------
Benchmark                                                     Time             CPU   Iterations
-----------------------------------------------------------------------------------------------
logsumexp_performance<float>/64/real_time                   512 ns          516 ns      1000000
logsumexp_performance<float>/128/real_time                 1003 ns          986 ns       728594
logsumexp_performance<float>/256/real_time                 1963 ns         2001 ns       359132
logsumexp_performance<float>/512/real_time                 3918 ns         3919 ns       179395
logsumexp_performance<float>/1024/real_time                7703 ns         7723 ns        84969
logsumexp_performance<float>/2048/real_time               15997 ns        15790 ns        44530
logsumexp_performance<float>/4096/real_time               30915 ns        31473 ns        22837
logsumexp_performance<float>/8192/real_time               63001 ns        62234 ns        10796
logsumexp_performance<float>/16384/real_time             128639 ns       130672 ns         5620
logsumexp_performance<float>/32768/real_time             268432 ns       269599 ns         2666
logsumexp_performance<float>/65536/real_time             550086 ns       550365 ns         1164
logsumexp_performance<float>/131072/real_time           1007520 ns      1021984 ns          688
logsumexp_performance<float>/262144/real_time           1976225 ns      1958689 ns          351
logsumexp_performance<float>/524288/real_time           4062535 ns      4083807 ns          176
logsumexp_performance<float>/1048576/real_time          8363232 ns      8333333 ns           90
logsumexp_performance<float>/real_time_BigO                7.91 N          7.90 N
logsumexp_performance<float>/real_time_RMS                    4 %             3 %
logsumexp_performance<double>/64/real_time                  582 ns          581 ns      1183702
logsumexp_performance<double>/128/real_time                1200 ns         1191 ns       603378
logsumexp_performance<double>/256/real_time                2547 ns         2550 ns       281847
logsumexp_performance<double>/512/real_time                5312 ns         5307 ns       135435
logsumexp_performance<double>/1024/real_time               9647 ns         9695 ns        69300
logsumexp_performance<double>/2048/real_time              18521 ns        18386 ns        36542
logsumexp_performance<double>/4096/real_time              37065 ns        37082 ns        18540
logsumexp_performance<double>/8192/real_time              75715 ns        74801 ns         9400
logsumexp_performance<double>/16384/real_time            156009 ns       154599 ns         4447
logsumexp_performance<double>/32768/real_time            292937 ns       295307 ns         2381
logsumexp_performance<double>/65536/real_time            584194 ns       582539 ns         1207
logsumexp_performance<double>/131072/real_time          1175421 ns      1174428 ns          612
logsumexp_performance<double>/262144/real_time          2382460 ns      2375422 ns          296
logsumexp_performance<double>/524288/real_time          4720312 ns      4783163 ns          147
logsumexp_performance<double>/1048576/real_time         9570338 ns      9457237 ns           76
logsumexp_performance<double>/real_time_BigO               9.10 N          9.04 N
logsumexp_performance<double>/real_time_RMS                   1 %             1 %
logsumexp_performance<long double>/64/real_time             599 ns          599 ns      1147319
logsumexp_performance<long double>/128/real_time           1163 ns         1166 ns       602863
logsumexp_performance<long double>/256/real_time           2270 ns         2287 ns       307495
logsumexp_performance<long double>/512/real_time           4523 ns         4491 ns       153067
logsumexp_performance<long double>/1024/real_time          8833 ns         8845 ns        77731
logsumexp_performance<long double>/2048/real_time         17855 ns        17582 ns        38214
logsumexp_performance<long double>/4096/real_time         35755 ns        35488 ns        19813
logsumexp_performance<long double>/8192/real_time         86561 ns        86875 ns         8813
logsumexp_performance<long double>/16384/real_time       159225 ns       161993 ns         4244
logsumexp_performance<long double>/32768/real_time       309235 ns       307948 ns         2334
logsumexp_performance<long double>/65536/real_time       607855 ns       597465 ns         1203
logsumexp_performance<long double>/131072/real_time     1164873 ns      1147023 ns          613
logsumexp_performance<long double>/262144/real_time     2297293 ns      2297794 ns          306
logsumexp_performance<long double>/524288/real_time     4664338 ns      4614094 ns          149
logsumexp_performance<long double>/1048576/real_time    9226792 ns      9417808 ns           73
logsumexp_performance<long double>/real_time_BigO          8.82 N          8.94 N
logsumexp_performance<long double>/real_time_RMS              1 %             2 %
```

[heading References]

* Higham, Nicholas J. [@https://nhigham.com/2021/01/05/what-is-the-log-sum-exp-function/ What is the Log-Sum-Exp Function?]

[endsect]
